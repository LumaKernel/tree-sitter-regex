===================
sequence match
===================
hello
---

(pattern (term
  (atom (pattern_character))
  (atom (pattern_character))
  (atom (pattern_character))
  (atom (pattern_character))
  (atom (pattern_character))
))

===================
sequence match w/ '.' atom
===================
he..o
---

(pattern (term
  (atom (pattern_character))
  (atom (pattern_character))
  (atom)
  (atom)
  (atom (pattern_character))
))

===================
disjunctions
===================
he..o|wo.ld
---

(pattern (disjunction
  (term
    (atom (pattern_character))
    (atom (pattern_character))
    (atom)
    (atom)
    (atom (pattern_character))
  )
  (term
    (atom (pattern_character))
    (atom (pattern_character))
    (atom)
    (atom (pattern_character))
    (atom (pattern_character))
  )
))

===================
disjunctions with empty terms
===================
he..o||wo.ld
---

(pattern (disjunction
  (term
    (atom (pattern_character))
    (atom (pattern_character))
    (atom)
    (atom)
    (atom (pattern_character))
  )
  (term
    (atom (pattern_character))
    (atom (pattern_character))
    (atom)
    (atom (pattern_character))
    (atom (pattern_character))
  )
))

===================
assertions
===================
^he..o$
---

(pattern (term
  (atom (assertion))
  (atom (pattern_character))
  (atom (pattern_character))
  (atom)
  (atom)
  (atom (pattern_character))
  (atom (assertion))
))

===================
disjunction w empty terms & assertions
===================
^he..o$||w..ld$
---

(pattern (disjunction
  (term
    (atom (assertion))
    (atom (pattern_character))
    (atom (pattern_character))
    (atom)
    (atom)
    (atom (pattern_character))
    (atom (assertion)))
  (term
    (atom (pattern_character))
    (atom)
    (atom)
    (atom (pattern_character))
    (atom (pattern_character))
    (atom (assertion)))
))

===================
assertions
===================
Jack(?=Sprat)
---

(pattern (term
    (atom (pattern_character))
    (atom (pattern_character))
    (atom (pattern_character))
    (atom (pattern_character))
    (atom (assertion (pattern (term
      (atom (pattern_character))
      (atom (pattern_character))
      (atom (pattern_character))
      (atom (pattern_character))
      (atom (pattern_character))
    ))))
))

===================
character classes
===================
[A-Za-z][^Xx]
---

(pattern (term
  (atom (character_class
    (class_range (class_atom) (class_atom))
    (class_range (class_atom) (class_atom))
  ))
  (atom (character_class
    (class_range (class_atom))
    (class_range (class_atom))
  ))
))

===================
non-capturing groups
===================
Jack(?:Sprat)
---

(pattern (term
    (atom (pattern_character))
    (atom (pattern_character))
    (atom (pattern_character))
    (atom (pattern_character))
    (atom (non_capturing_group (pattern (term
      (atom (pattern_character))
      (atom (pattern_character))
      (atom (pattern_character))
      (atom (pattern_character))
      (atom (pattern_character))
    ))))
))
